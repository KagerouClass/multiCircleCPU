////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Framework.vf
// /___/   /\     Timestamp : 06/16/2017 10:12:59
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -sympath D:/ISEprogram/Exp05/2017.06.15/Framework_final/code -sympath D:/ISEprogram/Exp05/2017.06.15/Framework_final/iseconfig -sympath D:/ISEprogram/Exp05/2017.06.15/Framework_final/ipcore_dir -intstyle ise -family kintex7 -verilog D:/ISEprogram/Exp05/2017.06.15/Framework_final/iseconfig/Framework.vf -w D:/ISEprogram/Exp05/2017.06.15/Framework_final/code/Framework.sch
//Design Name: Framework
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4T1_4_MUSER_Framework(I0, 
                                I1, 
                                I2, 
                                I3, 
                                s, 
                                o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_18;
   wire XLXN_19;
   wire XLXN_20;
   wire XLXN_21;
   wire XLXN_22;
   wire XLXN_23;
   wire XLXN_24;
   wire XLXN_25;
   wire XLXN_27;
   wire XLXN_28;
   wire XLXN_29;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_69;
   wire XLXN_74;
   wire XLXN_78;
   wire XLXN_81;
   
   INV  XLXI_2 (.I(s[1]), 
               .O(XLXN_6));
   INV  XLXI_3 (.I(s[0]), 
               .O(XLXN_5));
   AND2  XLXI_4 (.I0(XLXN_5), 
                .I1(XLXN_6), 
                .O(XLXN_74));
   AND2  XLXI_5 (.I0(s[0]), 
                .I1(XLXN_6), 
                .O(XLXN_78));
   AND2  XLXI_6 (.I0(XLXN_5), 
                .I1(s[1]), 
                .O(XLXN_81));
   AND2  XLXI_7 (.I0(s[0]), 
                .I1(s[1]), 
                .O(XLXN_69));
   AND2  XLXI_8 (.I0(I0[0]), 
                .I1(XLXN_74), 
                .O(XLXN_16));
   AND2  XLXI_9 (.I0(I1[0]), 
                .I1(XLXN_78), 
                .O(XLXN_43));
   AND2  XLXI_10 (.I0(I2[0]), 
                 .I1(XLXN_81), 
                 .O(XLXN_42));
   AND2  XLXI_11 (.I0(I3[0]), 
                 .I1(XLXN_69), 
                 .O(XLXN_41));
   OR4  XLXI_12 (.I0(XLXN_41), 
                .I1(XLXN_42), 
                .I2(XLXN_43), 
                .I3(XLXN_16), 
                .O(o[0]));
   AND2  XLXI_13 (.I0(I0[1]), 
                 .I1(XLXN_74), 
                 .O(XLXN_17));
   AND2  XLXI_14 (.I0(I3[1]), 
                 .I1(XLXN_69), 
                 .O(XLXN_20));
   AND2  XLXI_15 (.I0(I1[1]), 
                 .I1(XLXN_78), 
                 .O(XLXN_18));
   AND2  XLXI_16 (.I0(I2[1]), 
                 .I1(XLXN_81), 
                 .O(XLXN_19));
   OR4  XLXI_17 (.I0(XLXN_20), 
                .I1(XLXN_19), 
                .I2(XLXN_18), 
                .I3(XLXN_17), 
                .O(o[1]));
   AND2  XLXI_18 (.I0(I0[2]), 
                 .I1(XLXN_74), 
                 .O(XLXN_21));
   AND2  XLXI_19 (.I0(I3[2]), 
                 .I1(XLXN_69), 
                 .O(XLXN_24));
   AND2  XLXI_20 (.I0(I1[2]), 
                 .I1(XLXN_78), 
                 .O(XLXN_22));
   AND2  XLXI_21 (.I0(I2[2]), 
                 .I1(XLXN_81), 
                 .O(XLXN_23));
   OR4  XLXI_22 (.I0(XLXN_24), 
                .I1(XLXN_23), 
                .I2(XLXN_22), 
                .I3(XLXN_21), 
                .O(o[2]));
   AND2  XLXI_23 (.I0(I0[3]), 
                 .I1(XLXN_74), 
                 .O(XLXN_25));
   AND2  XLXI_24 (.I0(I3[3]), 
                 .I1(XLXN_69), 
                 .O(XLXN_28));
   AND2  XLXI_25 (.I0(I1[3]), 
                 .I1(XLXN_78), 
                 .O(XLXN_29));
   AND2  XLXI_26 (.I0(I2[3]), 
                 .I1(XLXN_81), 
                 .O(XLXN_27));
   OR4  XLXI_27 (.I0(XLXN_28), 
                .I1(XLXN_27), 
                .I2(XLXN_29), 
                .I3(XLXN_25), 
                .O(o[3]));
endmodule
`timescale 1ns / 1ps

module MUX8T1_8_MUSER_Framework(I0, 
                                I1, 
                                I2, 
                                I3, 
                                I4, 
                                I5, 
                                I6, 
                                I7, 
                                s, 
                                O);

    input [7:0] I0;
    input [7:0] I1;
    input [7:0] I2;
    input [7:0] I3;
    input [7:0] I4;
    input [7:0] I5;
    input [7:0] I6;
    input [7:0] I7;
    input [2:0] s;
   output [7:0] O;
   
   wire XLXN_246;
   wire [3:0] XLXN_260;
   wire [3:0] XLXN_261;
   wire XLXN_292;
   wire XLXN_293;
   wire XLXN_294;
   wire XLXN_295;
   wire XLXN_296;
   wire XLXN_297;
   wire XLXN_298;
   wire XLXN_299;
   wire XLXN_300;
   wire XLXN_301;
   wire XLXN_302;
   wire XLXN_304;
   wire XLXN_305;
   wire XLXN_306;
   wire XLXN_307;
   wire XLXN_308;
   wire [3:0] XLXN_323;
   wire [3:0] XLXN_329;
   
   AND2  XLXI_43 (.I0(XLXN_260[3]), 
                 .I1(XLXN_246), 
                 .O(XLXN_292));
   AND2  XLXI_44 (.I0(XLXN_260[2]), 
                 .I1(XLXN_246), 
                 .O(XLXN_293));
   AND2  XLXI_45 (.I0(XLXN_260[1]), 
                 .I1(XLXN_246), 
                 .O(XLXN_294));
   AND2  XLXI_46 (.I0(XLXN_260[0]), 
                 .I1(XLXN_246), 
                 .O(XLXN_295));
   AND2  XLXI_47 (.I0(XLXN_261[3]), 
                 .I1(s[2]), 
                 .O(XLXN_296));
   AND2  XLXI_48 (.I0(XLXN_261[2]), 
                 .I1(s[2]), 
                 .O(XLXN_297));
   AND2  XLXI_49 (.I0(XLXN_261[1]), 
                 .I1(s[2]), 
                 .O(XLXN_298));
   AND2  XLXI_50 (.I0(XLXN_261[0]), 
                 .I1(s[2]), 
                 .O(XLXN_299));
   AND2  XLXI_51 (.I0(XLXN_323[3]), 
                 .I1(XLXN_246), 
                 .O(XLXN_300));
   AND2  XLXI_52 (.I0(XLXN_323[2]), 
                 .I1(XLXN_246), 
                 .O(XLXN_301));
   AND2  XLXI_53 (.I0(XLXN_323[1]), 
                 .I1(XLXN_246), 
                 .O(XLXN_302));
   AND2  XLXI_54 (.I0(XLXN_323[0]), 
                 .I1(XLXN_246), 
                 .O(XLXN_304));
   AND2  XLXI_55 (.I0(XLXN_329[3]), 
                 .I1(s[2]), 
                 .O(XLXN_305));
   AND2  XLXI_56 (.I0(XLXN_329[2]), 
                 .I1(s[2]), 
                 .O(XLXN_306));
   AND2  XLXI_57 (.I0(XLXN_329[1]), 
                 .I1(s[2]), 
                 .O(XLXN_307));
   AND2  XLXI_58 (.I0(XLXN_329[0]), 
                 .I1(s[2]), 
                 .O(XLXN_308));
   INV  XLXI_59 (.I(s[2]), 
                .O(XLXN_246));
   OR2  XLXI_101 (.I0(XLXN_296), 
                 .I1(XLXN_292), 
                 .O(O[7]));
   OR2  XLXI_102 (.I0(XLXN_297), 
                 .I1(XLXN_293), 
                 .O(O[6]));
   OR2  XLXI_103 (.I0(XLXN_298), 
                 .I1(XLXN_294), 
                 .O(O[5]));
   OR2  XLXI_104 (.I0(XLXN_299), 
                 .I1(XLXN_295), 
                 .O(O[4]));
   OR2  XLXI_105 (.I0(XLXN_305), 
                 .I1(XLXN_300), 
                 .O(O[3]));
   OR2  XLXI_106 (.I0(XLXN_306), 
                 .I1(XLXN_301), 
                 .O(O[2]));
   OR2  XLXI_107 (.I0(XLXN_307), 
                 .I1(XLXN_302), 
                 .O(O[1]));
   OR2  XLXI_108 (.I0(XLXN_308), 
                 .I1(XLXN_304), 
                 .O(O[0]));
   MUX4T1_4_MUSER_Framework  XLXI_109 (.I0(I0[7:4]), 
                                      .I1(I1[7:4]), 
                                      .I2(I2[7:4]), 
                                      .I3(I3[7:4]), 
                                      .s(s[1:0]), 
                                      .o(XLXN_260[3:0]));
   MUX4T1_4_MUSER_Framework  XLXI_110 (.I0(I4[7:4]), 
                                      .I1(I5[7:4]), 
                                      .I2(I6[7:4]), 
                                      .I3(I7[7:4]), 
                                      .s(s[1:0]), 
                                      .o(XLXN_261[3:0]));
   MUX4T1_4_MUSER_Framework  XLXI_111 (.I0(I0[3:0]), 
                                      .I1(I1[3:0]), 
                                      .I2(I2[3:0]), 
                                      .I3(I3[3:0]), 
                                      .s(s[1:0]), 
                                      .o(XLXN_323[3:0]));
   MUX4T1_4_MUSER_Framework  XLXI_112 (.I0(I4[3:0]), 
                                      .I1(I5[3:0]), 
                                      .I2(I6[3:0]), 
                                      .I3(I7[3:0]), 
                                      .s(s[1:0]), 
                                      .o(XLXN_329[3:0]));
endmodule
`timescale 1ns / 1ps

module ScanSync_MUSER_Framework(Hexs, 
                                LES, 
                                point, 
                                Scan, 
                                AN, 
                                Hexo, 
                                LE, 
                                p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   MUX8T1_8_MUSER_Framework  XLXI_1 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                                    .I1({Hexs[7:4], G0, G0, G0, G0}), 
                                    .I2({Hexs[11:8], G0, G0, G0, G0}), 
                                    .I3({Hexs[15:12], G0, G0, G0, G0}), 
                                    .I4({Hexs[19:16], G0, G0, G0, G0}), 
                                    .I5({Hexs[23:20], G0, G0, G0, G0}), 
                                    .I6({Hexs[27:24], G0, G0, G0, G0}), 
                                    .I7({Hexs[31:28], G0, G0, G0, G0}), 
                                    .s(Scan[2:0]), 
                                    .O(Hex[7:0]));
   MUX8T1_8_MUSER_Framework  XLXI_3 (.I0({LES[0], point[0], G0, G0, V5, V5, V5, 
         G0}), 
                                    .I1({LES[1], point[1], G0, G0, V5, V5, G0, 
         V5}), 
                                    .I2({LES[2], point[2], G0, G0, V5, G0, V5, 
         V5}), 
                                    .I3({LES[3], point[3], G0, G0, G0, V5, V5, 
         V5}), 
                                    .I4({LES[4], point[4], G0, G0, V5, V5, V5, 
         G0}), 
                                    .I5({LES[5], point[5], G0, G0, V5, V5, G0, 
         V5}), 
                                    .I6({LES[7], point[7], G0, G0, G0, V5, V5, 
         V5}), 
                                    .I7({LES[6], point[6], G0, G0, V5, G0, V5, 
         V5}), 
                                    .s(Scan[2:0]), 
                                    .O(COM[7:0]));
   BUF  XLXI_6 (.I(Hex[7]), 
               .O(Hexo[3]));
   BUF  XLXI_7 (.I(Hex[6]), 
               .O(Hexo[2]));
   BUF  XLXI_8 (.I(Hex[5]), 
               .O(Hexo[1]));
   BUF  XLXI_9 (.I(Hex[4]), 
               .O(Hexo[0]));
   BUF  XLXI_10 (.I(COM[3]), 
                .O(AN[3]));
   BUF  XLXI_11 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_12 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_13 (.I(COM[0]), 
                .O(AN[0]));
   BUF  XLXI_14 (.I(COM[7]), 
                .O(LE));
   BUF  XLXI_15 (.I(COM[6]), 
                .O(p));
   VCC  XLXI_16 (.P(V5));
   GND  XLXI_17 (.G(G0));
endmodule
`timescale 1ns / 1ps

module MC14495_MUSER_Framework(D0, 
                               D1, 
                               D2, 
                               D3, 
                               LE, 
                               point, 
                               a, 
                               b, 
                               c, 
                               d, 
                               e, 
                               f, 
                               g, 
                               p);

    input D0;
    input D1;
    input D2;
    input D3;
    input LE;
    input point;
   output a;
   output b;
   output c;
   output d;
   output e;
   output f;
   output g;
   output p;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_11;
   wire XLXN_16;
   wire XLXN_17;
   wire XLXN_40;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_64;
   wire XLXN_65;
   wire XLXN_66;
   wire XLXN_68;
   wire XLXN_80;
   wire XLXN_81;
   wire XLXN_82;
   wire XLXN_83;
   wire XLXN_85;
   wire XLXN_211;
   wire XLXN_213;
   wire XLXN_214;
   wire XLXN_215;
   wire XLXN_224;
   wire XLXN_225;
   wire XLXN_226;
   wire XLXN_227;
   wire XLXN_229;
   wire XLXN_244;
   wire XLXN_245;
   wire XLXN_246;
   wire XLXN_249;
   wire XLXN_264;
   
   INV  XLXI_1 (.I(D0), 
               .O(XLXN_264));
   INV  XLXI_2 (.I(D1), 
               .O(XLXN_17));
   INV  XLXI_3 (.I(D2), 
               .O(XLXN_16));
   INV  XLXI_4 (.I(D3), 
               .O(XLXN_11));
   AND4  XLXI_5 (.I0(XLXN_11), 
                .I1(XLXN_16), 
                .I2(XLXN_17), 
                .I3(D0), 
                .O(XLXN_7));
   AND4  XLXI_6 (.I0(XLXN_11), 
                .I1(D2), 
                .I2(XLXN_17), 
                .I3(XLXN_264), 
                .O(XLXN_8));
   AND4  XLXI_7 (.I0(D3), 
                .I1(D2), 
                .I2(XLXN_17), 
                .I3(D0), 
                .O(XLXN_9));
   AND4  XLXI_8 (.I0(D3), 
                .I1(XLXN_16), 
                .I2(D1), 
                .I3(D0), 
                .O(XLXN_10));
   OR4  XLXI_9 (.I0(XLXN_7), 
               .I1(XLXN_8), 
               .I2(XLXN_9), 
               .I3(XLXN_10), 
               .O(XLXN_40));
   OR2  XLXI_20 (.I0(LE), 
                .I1(XLXN_40), 
                .O(a));
   AND4  XLXI_21 (.I0(XLXN_11), 
                 .I1(D2), 
                 .I2(XLXN_17), 
                 .I3(D0), 
                 .O(XLXN_42));
   AND3  XLXI_22 (.I0(D2), 
                 .I1(D1), 
                 .I2(XLXN_264), 
                 .O(XLXN_43));
   AND3  XLXI_23 (.I0(D3), 
                 .I1(D2), 
                 .I2(XLXN_264), 
                 .O(XLXN_44));
   AND3  XLXI_24 (.I0(D3), 
                 .I1(D1), 
                 .I2(D0), 
                 .O(XLXN_45));
   OR4  XLXI_25 (.I0(XLXN_42), 
                .I1(XLXN_43), 
                .I2(XLXN_44), 
                .I3(XLXN_45), 
                .O(XLXN_46));
   OR2  XLXI_26 (.I0(LE), 
                .I1(XLXN_46), 
                .O(b));
   INV  XLXI_27 (.I(point), 
                .O(p));
   AND4  XLXI_28 (.I0(XLXN_11), 
                 .I1(XLXN_16), 
                 .I2(D1), 
                 .I3(XLXN_264), 
                 .O(XLXN_64));
   AND3  XLXI_29 (.I0(D3), 
                 .I1(D2), 
                 .I2(XLXN_264), 
                 .O(XLXN_65));
   AND3  XLXI_30 (.I0(D3), 
                 .I1(D2), 
                 .I2(D1), 
                 .O(XLXN_66));
   OR3  XLXI_31 (.I0(XLXN_64), 
                .I1(XLXN_65), 
                .I2(XLXN_66), 
                .O(XLXN_68));
   OR2  XLXI_32 (.I0(LE), 
                .I1(XLXN_68), 
                .O(c));
   AND4  XLXI_33 (.I0(XLXN_11), 
                 .I1(XLXN_16), 
                 .I2(XLXN_17), 
                 .I3(D0), 
                 .O(XLXN_80));
   AND4  XLXI_34 (.I0(XLXN_11), 
                 .I1(D2), 
                 .I2(XLXN_17), 
                 .I3(XLXN_264), 
                 .O(XLXN_81));
   AND4  XLXI_35 (.I0(D3), 
                 .I1(XLXN_16), 
                 .I2(D1), 
                 .I3(XLXN_264), 
                 .O(XLXN_83));
   AND3  XLXI_36 (.I0(D2), 
                 .I1(D1), 
                 .I2(D0), 
                 .O(XLXN_82));
   OR4  XLXI_37 (.I0(XLXN_80), 
                .I1(XLXN_81), 
                .I2(XLXN_82), 
                .I3(XLXN_83), 
                .O(XLXN_85));
   OR2  XLXI_38 (.I0(LE), 
                .I1(XLXN_85), 
                .O(d));
   AND2  XLXI_52 (.I0(XLXN_11), 
                 .I1(D0), 
                 .O(XLXN_213));
   AND3  XLXI_53 (.I0(XLXN_11), 
                 .I1(D2), 
                 .I2(XLXN_17), 
                 .O(XLXN_214));
   AND3  XLXI_54 (.I0(XLXN_16), 
                 .I1(XLXN_17), 
                 .I2(D0), 
                 .O(XLXN_215));
   OR3  XLXI_55 (.I0(XLXN_213), 
                .I1(XLXN_214), 
                .I2(XLXN_215), 
                .O(XLXN_211));
   OR2  XLXI_56 (.I0(LE), 
                .I1(XLXN_211), 
                .O(e));
   AND3  XLXI_57 (.I0(XLXN_11), 
                 .I1(XLXN_16), 
                 .I2(D0), 
                 .O(XLXN_224));
   AND3  XLXI_58 (.I0(XLXN_11), 
                 .I1(XLXN_16), 
                 .I2(D1), 
                 .O(XLXN_225));
   AND3  XLXI_59 (.I0(XLXN_11), 
                 .I1(D1), 
                 .I2(D0), 
                 .O(XLXN_226));
   AND4  XLXI_60 (.I0(D3), 
                 .I1(D2), 
                 .I2(XLXN_17), 
                 .I3(D0), 
                 .O(XLXN_227));
   OR4  XLXI_61 (.I0(XLXN_224), 
                .I1(XLXN_225), 
                .I2(XLXN_226), 
                .I3(XLXN_227), 
                .O(XLXN_229));
   OR2  XLXI_62 (.I0(LE), 
                .I1(XLXN_229), 
                .O(f));
   AND3  XLXI_63 (.I0(XLXN_11), 
                 .I1(XLXN_16), 
                 .I2(XLXN_17), 
                 .O(XLXN_244));
   AND4  XLXI_64 (.I0(XLXN_11), 
                 .I1(D2), 
                 .I2(D1), 
                 .I3(D0), 
                 .O(XLXN_245));
   AND4  XLXI_65 (.I0(D3), 
                 .I1(D2), 
                 .I2(XLXN_17), 
                 .I3(XLXN_264), 
                 .O(XLXN_246));
   OR3  XLXI_66 (.I0(XLXN_244), 
                .I1(XLXN_245), 
                .I2(XLXN_246), 
                .O(XLXN_249));
   OR2  XLXI_68 (.I0(LE), 
                .I1(XLXN_249), 
                .O(g));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev_MUSER_Framework(flash, 
                                Hexs, 
                                LES, 
                                point, 
                                Scan, 
                                SW0, 
                                AN, 
                                SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire G0;
   wire [3:0] Hex;
   wire V5;
   wire XLXN_6;
   wire XLXN_7;
   wire XLXN_8;
   
   MC14495_MUSER_Framework  XLXI_1 (.D0(Hex[0]), 
                                   .D1(Hex[1]), 
                                   .D2(Hex[2]), 
                                   .D3(Hex[3]), 
                                   .LE(XLXN_6), 
                                   .point(XLXN_7), 
                                   .a(SEGMENT[0]), 
                                   .b(SEGMENT[1]), 
                                   .c(SEGMENT[2]), 
                                   .d(SEGMENT[3]), 
                                   .e(SEGMENT[4]), 
                                   .f(SEGMENT[5]), 
                                   .g(SEGMENT[6]), 
                                   .p(SEGMENT[7]));
   AND2  XLXI_3 (.I0(XLXN_8), 
                .I1(flash), 
                .O(XLXN_6));
   ScanSync_MUSER_Framework  XLXI_4 (.Hexs(Hexs[31:0]), 
                                    .LES(LES[7:0]), 
                                    .point(point[7:0]), 
                                    .Scan(Scan[2:0]), 
                                    .AN(AN[3:0]), 
                                    .Hexo(Hex[3:0]), 
                                    .LE(XLXN_8), 
                                    .p(XLXN_7));
   VCC  XLXI_5 (.P(V5));
   GND  XLXI_6 (.G(G0));
endmodule
`timescale 1ns / 1ps

module Display_MUSER_Framework(clk, 
                               flash, 
                               Hexs, 
                               LES, 
                               point, 
                               rst, 
                               Start, 
                               SW0, 
                               seg_clk, 
                               seg_clrn, 
                               SEG_PEN, 
                               seg_sout);

    input clk;
    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input rst;
    input Start;
    input SW0;
   output seg_clk;
   output seg_clrn;
   output SEG_PEN;
   output seg_sout;
   
   wire [63:0] SEGMENT;
   
   HexTo8SEG  XLXI_1 (.flash(flash), 
                     .Hexs(Hexs[31:0]), 
                     .LES(LES[7:0]), 
                     .points(point[7:0]), 
                     .SEG_TXT(SEGMENT[63:0]));
   P2S  XLXI_2 (.clk(clk), 
               .P_Data(SEGMENT[63:0]), 
               .rst(rst), 
               .Serial(Start), 
               .EN(SEG_PEN), 
               .sout(seg_sout), 
               .s_clk(seg_clk), 
               .s_clrn(seg_clrn));
endmodule
`timescale 1ns / 1ps

module Framework(clk_100mhz, 
                 K_COL, 
                 RSTN, 
                 SW, 
                 AN, 
                 Buzzer, 
                 CR, 
                 K_ROW, 
                 LED, 
                 LEDCLK, 
                 LEDCLR, 
                 LEDDT, 
                 LEDEN, 
                 RDY, 
                 readn, 
                 SEGCLK, 
                 SEGCLR, 
                 SEGDT, 
                 SEGEN, 
                 SEGMENT);

    input clk_100mhz;
    input [3:0] K_COL;
    input RSTN;
    input [15:0] SW;
   output [3:0] AN;
   output Buzzer;
   output CR;
   output [4:0] K_ROW;
   output [7:0] LED;
   output LEDCLK;
   output LEDCLR;
   output LEDDT;
   output LEDEN;
   output RDY;
   output readn;
   output SEGCLK;
   output SEGCLR;
   output SEGDT;
   output SEGEN;
   output [7:0] SEGMENT;
   
   wire [31:0] AI;
   wire [31:0] BI;
   wire [7:0] blink;
   wire [3:0] BTN_OK;
   wire Co;
   wire [31:0] Disp_num;
   wire [31:0] Div;
   wire LED0;
   wire LED1;
   wire LED2;
   wire LED3;
   wire LED4;
   wire [7:0] LE_out;
   wire N0;
   wire [7:0] point_out;
   wire [3:0] Pulse;
   wire rst;
   wire [15:0] SW_OK;
   wire V5;
   wire [4:0] XLXN_17;
   wire [31:0] XLXN_84;
   wire [31:0] XLXN_85;
   wire [31:0] XLXN_86;
   wire [31:0] XLXN_87;
   wire [31:0] XLXN_88;
   wire [31:0] XLXN_89;
   wire XLXN_91;
   wire RDY_DUMMY;
   wire readn_DUMMY;
   
   assign RDY = RDY_DUMMY;
   assign readn = readn_DUMMY;
   SAnti_jitter  XLXI_1 (.clk(clk_100mhz), 
                        .Key_y(K_COL[3:0]), 
                        .readn(readn_DUMMY), 
                        .RSTN(RSTN), 
                        .SW(SW[15:0]), 
                        .BTN_OK(BTN_OK[3:0]), 
                        .CR(CR), 
                        .Key_out(XLXN_17[4:0]), 
                        .Key_ready(RDY_DUMMY), 
                        .Key_x(K_ROW[4:0]), 
                        .pulse_out(Pulse[3:0]), 
                        .rst(rst), 
                        .SW_OK(SW_OK[15:0]));
   SEnter_2_32  XLXI_2 (.BTN(BTN_OK[2:0]), 
                       .clk(clk_100mhz), 
                       .Ctrl({SW_OK[7:5], SW_OK[15], SW_OK[0]}), 
                       .Din(XLXN_17[4:0]), 
                       .D_ready(RDY_DUMMY), 
                       .Ai(AI[31:0]), 
                       .Bi(BI[31:0]), 
                       .blink(blink[7:0]), 
                       .readn(readn_DUMMY));
   clkdiv  XLXI_5 (.clk(clk_100mhz), 
                  .rst(rst), 
                  .clkdiv(Div[31:0]));
   Display_MUSER_Framework  XLXI_6 (.clk(clk_100mhz), 
                                   .flash(Div[25]), 
                                   .Hexs(Disp_num[31:0]), 
                                   .LES(LE_out[7:0]), 
                                   .point(point_out[7:0]), 
                                   .rst(rst), 
                                   .Start(Div[20]), 
                                   .SW0(SW_OK[0]), 
                                   .seg_clk(SEGCLK), 
                                   .seg_clrn(SEGCLR), 
                                   .SEG_PEN(SEGEN), 
                                   .seg_sout(SEGDT));
   Multi_8CH32  XLXI_7 (.clk(clk_100mhz), 
                       .Data0(AI[31:0]), 
                       .data1(BI[31:0]), 
                       .data2(XLXN_89[31:0]), 
                       .data3(XLXN_84[31:0]), 
                       .data4(XLXN_85[31:0]), 
                       .data5(XLXN_86[31:0]), 
                       .data6(XLXN_87[31:0]), 
                       .data7(XLXN_88[31:0]), 
                       .EN(V5), 
                       .LES({N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         blink[3:0], N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, N0, 
         N0, blink[7:0], blink[7:0]}), 
                       .point_in({Div[31:0], Div[31:0]}), 
                       .rst(rst), 
                       .Test(SW_OK[7:5]), 
                       .Disp_num(Disp_num[31:0]), 
                       .LE_out(LE_out[7:0]), 
                       .point_out(point_out[7:0]));
   GPIO  XLXI_8 (.clk(clk_100mhz), 
                .EN(V5), 
                .P_Data({Div[25:0], Co, LED4, LED3, LED2, LED1, LED0}), 
                .rst(rst), 
                .Start(Div[20]), 
                .GPIOf0(), 
                .led_clk(LEDCLK), 
                .led_clrn(LEDCLR), 
                .LED_PEN(LEDEN), 
                .led_sout(LEDDT));
   PIO  XLXI_9 (.clk(clk_100mhz), 
               .EN(V5), 
               .PData_in({Div[25:0], Co, LED4, LED3, LED2, LED1, LED0}), 
               .rst(N0), 
               .GPIOf0(), 
               .LED(LED[7:0]));
   Seg7_Dev_MUSER_Framework  XLXI_10 (.flash(Div[25]), 
                                     .Hexs(Disp_num[31:0]), 
                                     .LES(LE_out[7:0]), 
                                     .point(point_out[7:0]), 
                                     .Scan({SW_OK[1], Div[19:18]}), 
                                     .SW0(SW_OK[0]), 
                                     .AN(AN[3:0]), 
                                     .SEGMENT(SEGMENT[7:0]));
   BUF  XLXI_11 (.I(V5), 
                .O(Buzzer));
   VCC  XLXI_12 (.P(V5));
   GND  XLXI_13 (.G(N0));
   Top  XLXI_14 (.clk(XLXN_91), 
                .input_address(SW_OK[4:0]), 
                .rst(rst), 
                .LED0(LED0), 
                .LED1(LED1), 
                .LED2(LED2), 
                .LED3(LED3), 
                .LED4(LED4), 
                .output_data(XLXN_89[31:0]));
   mux2_1_1  XLXI_15 (.A(BTN_OK[2]), 
                     .B(clk_100mhz), 
                     .Ctrl(SW_OK[8]), 
                     .S(XLXN_91));
endmodule
